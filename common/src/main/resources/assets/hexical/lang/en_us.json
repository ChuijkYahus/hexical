{
	"advancements.hexical.lamp.title": "Diamond in the Rough",
	"advancements.hexical.lamp.description": "Acquire a genie lamp.",
	"advancements.hexical.educate_genie.title": "New Order",
	"advancements.hexical.educate_genie.description": "Educate the genie with new instructions.",
	"advancements.hexical.broken_mind.title": "Out with the Old...",
	"advancements.hexical.broken_mind.description": "Use up a lamp's media.",
	"advancements.hexical.reload_lamp.title": "In with the New!",
	"advancements.hexical.reload_lamp.description": "Reload the lamp.",
	"advancements.hexical.arch_lamp.title": "Phenomenal Cosmic Powers!",
	"advancements.hexical.arch_lamp.description": "Acquire an archgenie lamp.",
	"advancements.hexical.augmented_reality.title": "Augmented Reality",
	"advancements.hexical.augmented_reality.description": "Conjure a speck.",
	"advancements.hexical.diy_conjuring.title": "DIY Conjuring!",
	"advancements.hexical.diy_conjuring.description": "Add a custom modifier to a mage block.",
	"advancements.hexical.hallucinate.title": "Only in my Head",
	"advancements.hexical.hallucinate.description": "Play a sound only you can hear!",

	"block.hexical.mage_block": "Mage Block",
	"entity.hexical.speck": "Speck",
	"key.categories.hexical": "Hexical",
	"key.hexical.telepathy": "Telepathy",
	"item.hexical.grimoire": "Grimoire",
	"item.hexical.lamp": "Genie Lamp",
	"item.hexical.arch_lamp": "Archgenie Lamp",
	"item.hexical.conjured_staff": "Conjured Staff",
	"item.hexical.living_scroll_small": "Small Living Ink Scroll",
	"item.hexical.living_scroll_medium": "Medium Living Ink Scroll",
	"item.hexical.living_scroll_large": "Large Living Ink Scroll",
	"itemGroup.hexical.general": "Hexical",
	"particle.minecraft.soul_7": "Soul",
	"subtitles.hexical.lamp_activate": "Lamp activates",
	"subtitles.hexical.lamp_deactivate": "Lamp deactivates",

	"hexcasting.mishap.bad_item.grimoire": "a grimoire",
	"hexcasting.mishap.bad_block.mage_block": "a mage block",
	"hexcasting.mishap.bad_item.lamp": "an empty lamp",
	"hexcasting.mishap.bad_item.lamp_full": "a lamp with media",
	"hexcasting.mishap.bad_item.lamp_flay": "a villager of Journeyman status or greater",
	"hexcasting.mishap.bad_item.speck": "a speck",
	"hexcasting.mishap.bad_item.living_scroll": "a living scroll",
	"hexcasting.mishap.invalid_value.pattern_list": "a list with only patterns",
	"hexcasting.mishap.invalid_value.identifier": "an identifier",
	"hexcasting.mishap.invalid_value.food": "a food item stack",
	"hexcasting.mishap.invalid_value.potion_food": "an item stack of a food or potion",
	"hexcasting.mishap.invalid_value.item_stack": "an item stack",
	"hexcasting.mishap.invalid_value.identifiable": "an identifiable target",
	"hexcasting.mishap.invalid_value.recognizable": "a target with extra information",
	"hexcasting.mishap.hexical:needs_regular_lamp": "Expected to be cast by regular Genie Lamp.",
	"hexcasting.mishap.hexical:needs_arch_lamp": "Expected an active Arch Genieless Lamp in the inventory.",
	"hexcasting.mishap.hexical:grimoire_access_denied": "Tried to increase the uses of a restricted binding.",
	"hexcasting.mishap.hexical:grimoire_too_full": "Tried to fit too many bindings in a grimoire.",
	"hexcasting.mishap.hexical:outside_domain": "Spell exceeds the domains of the spell circle.",

	"hexcasting.spell.hexical:paint_scroll": "Paint Scroll",

	"hexcasting.spell.hexical:identify": "Detective's Purification",
	"hexcasting.spell.hexical:recognize": "Recognizer's Purif.",
	"hexcasting.spell.hexical:forage": "Forager's Purification",
	"hexcasting.spell.hexical:count_stack": "Storage Purification",
	"hexcasting.spell.hexical:count_max_stack": "Warehouse Purification",
	"hexcasting.spell.hexical:damage_stack": "Deterioration Purif.",
	"hexcasting.spell.hexical:damage_max_stack": "Fragility Purification",

	"hexcasting.spell.hexical:edible": "Edibility Purification",
	"hexcasting.spell.book.hexical:get_hunger": "Calorie Purification",
	"hexcasting.spell.book.hexical:get_saturation": "Satiation Purification",
	"hexcasting.spell.book.hexical:is_meat": "Flesh Purification",
	"hexcasting.spell.book.hexical:is_snack": "Dessert Purification",

	"hexcasting.spell.hexical:get_enchantments": "Thaumaturgist's Purif.",
	"hexcasting.spell.hexical:get_enchantment_strength": "Charm Distillation",

	"hexcasting.spell.hexical:get_effects_entity": "Diagnosis Purification",
	"hexcasting.spell.hexical:get_effects_item": "Prescription Purification",
	"hexcasting.spell.hexical:get_effect_category": "Condition Purification",
	"hexcasting.spell.hexical:get_effect_amplifier": "Concentration Distillation",
	"hexcasting.spell.hexical:get_effect_duration": "Clearance Distillation",

	"hexcasting.spell.hexical:get_telepathy": "Telepathic Reflection",
	"hexcasting.spell.hexical:send_telepathy": "Send Thought",
	"hexcasting.spell.hexical:shout_telepathy": "Shout Thought",
	"hexcasting.spell.hexical:pling": "Hallucinate Pling",
	"hexcasting.spell.hexical:click": "Hallucinate Click",

	"hexcasting.spell.hexical:displace": "Displace",

	"hexcasting.spell.hexical:write_grimoire": "Write Grimoire",
	"hexcasting.spell.hexical:erase_grimoire": "Erase Grimoire",
	"hexcasting.spell.hexical:index_grimoire": "Archivist Reflection",
	"hexcasting.spell.hexical:restrict_grimoire": "Restrict Grimoire",
	"hexcasting.spell.hexical:query_grimoire": "Archivist Purification",

	"hexcasting.spell.hexical:make_genie": "Make Genie",
	"hexcasting.spell.hexical:educate_genie": "Educate Genie",
	"hexcasting.spell.hexical:lamp_finale": "Finale Reflection",
	"hexcasting.spell.hexical:get_lamp_position": "Genie Refl.: Spatial",
	"hexcasting.spell.hexical:get_lamp_rotation": "Genie Refl.: Rotational",
	"hexcasting.spell.hexical:get_lamp_velocity": "Genie Refl.: Kinetic",
	"hexcasting.spell.hexical:get_lamp_use_time": "Genie Refl.: Temporal",
	"hexcasting.spell.hexical:get_lamp_media": "Genie Refl.: Media",
	"hexcasting.spell.hexical:get_arch_lamp_position": "Arch. Refl.: Spatial",
	"hexcasting.spell.hexical:get_arch_lamp_rotation": "Arch. Refl.: Rotational",
	"hexcasting.spell.hexical:get_arch_lamp_velocity": "Arch. Refl.: Kinetic",
	"hexcasting.spell.hexical:get_arch_lamp_use_time": "Arch. Refl.: Temporal",
	"hexcasting.spell.hexical:get_arch_lamp_media": "Arch. Refl.: Media",
	"hexcasting.spell.hexical:get_arch_lamp_storage": "Arch. Refl.: Memory",
	"hexcasting.spell.hexical:set_arch_lamp_storage": "Archgenie Gambit",
	"hexcasting.spell.hexical:has_arch_lamp": "Archgenie Purification",
	"hexcasting.spell.hexical:terminate_arch_lamp": "Archgenie Termination",

	"hexcasting.spell.hexical:chorus_blink": "Chorus Blink",
	"hexcasting.spell.hexical:conjure_staff": "Conjure Staff",

	"hexcasting.spell.hexical:conjure_mage_block": "Conjure Mage Block",
	"hexcasting.spell.hexical:modify_block_bouncy": "Modify Block: Bouncy",
	"hexcasting.spell.hexical:modify_block_energized": "Modify Block: Energized",
	"hexcasting.spell.hexical:modify_block_ephemeral": "Modify Block: Ephemeral",
	"hexcasting.spell.hexical:modify_block_invisible": "Modify Block: Invisible",
	"hexcasting.spell.hexical:modify_block_replaceable": "Modify Block: Replaceable",
	"hexcasting.spell.hexical:modify_block_volatile": "Modify Block: Volatile",

	"hexcasting.spell.hexical:get_weather": "Meterologist's Refl.",
	"hexcasting.spell.hexical:block_hardness": "Miner's Purification",
	"hexcasting.spell.hexical:block_blast_resistance": "Demoman's Purification",
	"hexcasting.spell.hexical:is_burning": "Inferno Purification",
	"hexcasting.spell.hexical:burning_time": "Inferno Purification II",
	"hexcasting.spell.hexical:is_wet": "Enderman's Purification",
	"hexcasting.spell.hexical:is_sleeping": "Sloth's Purification",
	"hexcasting.spell.hexical:is_sprinting": "Racer's Purification",

	"hexcasting.spell.hexical:nephthys": "Nephthys Gambit",

	"hexcasting.spell.hexical:conjure_speck": "Conjure Speck",
	"hexcasting.spell.hexical:move_speck": "Move Speck",
	"hexcasting.spell.hexical:rotate_speck": "Rotate Speck",
	"hexcasting.spell.hexical:z_rotation_speck": "Z Rotation Speck",
	"hexcasting.spell.hexical:iota_speck": "Iota Speck",
	"hexcasting.spell.hexical:lifetime_speck": "Lifetime Speck",
	"hexcasting.spell.hexical:size_speck": "Size Speck",
	"hexcasting.spell.hexical:thickness_speck": "Thickness Speck",
	"hexcasting.spell.hexical:kill_speck": "Dismiss Speck",
	"hexcasting.spell.hexical:zone_speck": "Zone Dstl.: Speck",

	"hexical.page.hexical_changes.title": "Hexical Changes",
	"hexical.page.hexical_changes.0": "I feel strangely more in tune with the ambient _media around me. It feels $(o)friendlier$() somehow... I can even feel it rippling around me, responding to my actions, as if suggesting new spells to me. The media itself also feels more malleable, more $(o)workable$(), allowing me to manipulate it into precise specialized effects.",
	"hexical.page.hexical_changes.1": "I also find my tools more familar. I notice I require less concentration with my $(l:items/staff)$(item)staff$() and can move around while using it, handy for chasing down targets that get out of my line of sight before I can finish my raycast. I shouldn't become too relaxed though, Nature has not become more forgiving of my mistakes. I can also write directly into my $(l:items/abacus)$(item)abacus$() with Scribe's Gambit.",

	"hexical.page.living_scroll.title": "Living Scrolls",
	"hexical.page.living_scroll.0": "Living ink scrolls are enchanted with a bit of amethyst, allowing the ink to move and vibrate. Not only that, living ink scrolls can also cycle through a list of patterns.$(br2)$(o)You can't be a proper writer without a touch of madness, can you?$()",
	"hexical.page.paint_scroll": "Takes in a living ink scroll in the world and a pattern list, and forces the scroll to take on the patterns.",
	"hexical.page.living_scroll.1": "",

	"hexical.page.circle_spells.title": "Circle Spells",
	"hexical.page.circle_spells.0": "When the media courses through the boundaries of a circle, it saturates the domain inside the circle with media, allowing me to manipulate the environment inside far more flexibly than I am used to.",
	"hexical.page.displace": "For just three amethyst shards, I can teleport an entity from anywhere in my circle to anywhere else inside. Unlike $(l:patterns/great_spells/teleport)Greater Teleport$(), this spell takes in exact coordinates.",

	"hexical.category.scrying": "World Scrying",
	"hexical.category.scrying.desc": "I have stumbled upon a branch of manipulating media entirely focused around information. I can use the media to divine a surprising amount of information about a surprising number of things. While likely not too useful, these will be nice to have, should I ever need them.",

	"hexical.page.identifiers.title": "Identifiers",
	"hexical.page.identifiers.0": "My hexes has so far been quite blind to the world. I can get a creature's height, velocity, whether it's burning, etc... but I can't directly identify that entity. Nature's solution to the problem is the $(o)identifier iota$(). Every entity, block, status effect, enchantment, sound, etc... has a unique identifier that my hexes can identify. Once I have two identifiers, I can compare them with each other.",
	"hexical.page.identifiers.1": "Pushes the identifier of an entity or block at a vector.",
	"hexical.page.identifiers.2": "I notice that if I were to use Detective's Purification on an item, it returns that it's an item entity, but if I were to use Recognizer's Purification on that same entity, it would return the type of item. This type of item matches with a block identifier returned by Detective's Purification. I can imagine Recognizer's as returning $(o)additional$() information if possible.",
	"hexical.page.identifiers.3": "Pushes extra identifier information of an entity, mainly the item type of an item entity or the item type inside an item frame entity.",

	"hexical.page.item_stacks.title": "Item Stacks",
	"hexical.page.item_stacks.0": "I can get representations of entities on the stack, why not items? This set of patterns allows me to divine information from an item stack, like durability, amount of items, and enchantments. The item stack can be from my inventory, in an item frame, or on the ground. However, it seems the iota is merely a $(o)copy$(). It does not update if I pick up the item stack or drop some.",
	"hexical.page.forage": "Takes in an item entity and returns the item stack that it is.",
	"hexical.page.count_stack": "Takes in an item stack and returns how many items are in it.",
	"hexical.page.count_max_stack": "Takes in an item stack and returns how many items that can stack in it.",
	"hexical.page.damage_stack": "Takes in an item stack and returns how much durability the item has left.",
	"hexical.page.damage_max_stack": "Takes in an item entity and returns how much durability the item can have at its peak.",

	"hexical.page.enchantments.title": "Enchantments",
	"hexical.page.enchantments.0": "I can get the enchantments off an item and divine how strong that enchantment is.",
    "hexical.page.get_enchantments": "Gets a list of enchantments the item has.",
    "hexical.page.get_enchantment_strength": "Gets the strength of the specific enchantment on the item.",

	"hexical.page.entities.title": "Entities",
	"hexical.page.entities.0": "I can get information about entities.",

	"hexical.page.food.title": "Food",
	"hexical.page.food.0": "Even more specific than item stacks, I can use the media to divine aspects of food, like how full it will make me and how long I will remain full, as well as whether an item is a food and what status effects it will bestow upon eating.",
	"hexical.page.edible": "Takes in an item entity and returns whether you can eat it.",
	"hexical.page.get_hunger": "Takes in an item entity and pushes the amount it will fill you.",
	"hexical.page.get_saturation": "Takes in an item entity and pushes the saturation value, which roughly affects how long it will fill you.",
	"hexical.page.is_meat": "Takes in an item entity and pushes whether it's considered a meat ( whether wolves can eat it ).",
	"hexical.page.is_snack": "Takes in an item entity and pushes whether it's a snack ( you can eat it really quickly ).",

	"hexical.page.status_effects.title": "Status Effects",
	"hexical.page.status_effects.0": "I can diagnose the status effects of an entity and treat them with this set of patterns.",
    "hexical.page.get_effects_entity": "Gets a list of status effects the entity is afflicted with.",
    "hexical.page.get_effects_item": "Gets a list of status effects the food or potion will bestow.",
    "hexical.page.get_effect_category": "Gets the general \"goodness\" of the effect towards the afflicted. -1 for harmful, 0 for neutral, and 1 for beneficial.",
    "hexical.page.get_effect_amplifier": "Gets the potency of the specific effect acting on the entity or null if the entity doesn't have it.",
    "hexical.page.get_effect_duration": "Gets how long the effect will last or null if the entity doesn't have it.",

	"hexical.page.world.title": "World",
	"hexical.page.world": "I have discovered some additional patterns to scry information about the world. These are highly specialized for specific tasks, like checking the weather and block hardness.",
	"hexical.page.get_weather": "Pushes a number corresponding to the weather. 0 for clear, 1 for rain, and 2 for thundering.",
	"hexical.page.block_hardness": "Pushes how hard the block is to mine.",
	"hexical.page.block_blast_resistance": "Pushes how resistant the block is to explosions.",
	"hexical.page.is_burning": "Pushes whether the entity is burning. Also applies to entities that are visually on fire, even if they are immune to fire like blazes attacking.",
	"hexical.page.burning_time": "Pushes how long the entity will continue burning if not put out.",
	"hexical.page.is_wet": "Pushes whether the entity is touching rain, water, or in a bubble column.",
	"hexical.page.is_sleeping": "Pushes whether the entity is sleeping. Applies to players, cats, foxes, and a variety of other creatures.",
	"hexical.page.is_sprinting": "Pushes whether the entity is sprinting. Includes if I am swimming or if I have left the ground since sprinting, extends to cats, foxes, and more.",

	"hexical.page.grimoire.title": "Grimoires",
	"hexical.page.grimoire.0": "By encrusting an enchanted book with charged amethyst and edified wood, it traps media within the pages like an echo chamber. I can then introduce a pattern-to-pattern-list binding for the grimoire to keep bouncing endlessly inside.",
	"hexical.page.grimoire.1": "When I then cast the $(l:patterns/patterns_as_iotas)pattern$() associated with a pattern list with my $(l:items/staff)$(item)staff$() and the $(item)grimoire$() in my inventory, the pattern breaks free with a faint sound of a _Hex being cast. I create $(o)shortcuts$() for tedious tasks, like the raycast mantra or large patterns. The grimoire can even hijack Nature's patterns, to overwrite or add extra functionality.$(br2)$(o)If there's a book that you want to read, but it hasn't been written yet, then you must write it.$()",
	"hexical.page.grimoire.2": "While stable with only a few strands of _media wizzing around inside, a single grimoire can not hold more than sixteen pattern bindings. When attempting to introduce more, the grimoire simply rejects it and throws itself onto the ground with a shower of blue sparks.",
	"hexical.page.grimoire.3": "I can also restrict a pattern inside the grimoire so it destroys itself after a certain number of uses. I shall find this aspect of the grimoire quite useful if I ever need to lend out my true name. I can simply give them a grimoire a set number of references to my name.",
	"hexical.page.write_grimoire": "Writes a pattern-to-pattern-list binding into the grimoire in my offhand.",
	"hexical.page.erase_grimoire": "Erases the pattern-list binding to the pattern in the grimoire in my offhand if it exists.",
	"hexical.page.index_grimoire": "Gets a list of all patterns stored in the grimoire.",
	"hexical.page.restrict_grimoire": "Restrict a grimoire binding to be only usable that number of times, mishaps if you attempt to increase the uses.",
	"hexical.page.query_grimoire": "Gets how many times you can use that grimoire binding before it erases itself.",

	"hexical.category.lamp": "Genie Lamp",
	"hexical.category.lamp.desc": "I have heard tales from the villagers about a magical artifact. Legends say it contains a spirit that grants wishes, but I suspect that is just embellishment evolved over centuries of storytelling. Regardless, I dedicate this chapter to my pursuit and research of it.",

	"hexical.page.mysterious_lamp.title": "Mysterious Lamp",
	"hexical.page.mysterious_lamp.0": "At last I've obtained the subject of a thousand years of rumor! To think a mere wandering trader was in possession of such a strong artifact. The oil lamp emanates a vague residue of _media, vacuous in feeling... it reminds me of the $(o)hollow media structure$() of a $(l:items/focus)$(item)focus$() that allows it to store iota. There is also a presence inside with casting capabilities similar to my own.",
	"hexical.page.mysterious_lamp.1": "Teaches the presence my intentions. Because I am $(o)teaching$() an entity rather than $(o)etching$() a casting device, I can freely revise the hex and reteach the genie any time without losing the media.",

	"hexical.page.new_possibilities.title": "New Possibilities",
	"hexical.page.new_possibilities.0": "It casts $(o)$(l)EVERY INSTANT$(). After writing a spell into it, I was treated to a splendid unceasing gush of media. I estimate the casting speed must be around twenty times every second. The presence inside the lamp performs the casting with extraordinary efficiency, not producing most of the sound and particles that accompany other casting methods.",
	"hexical.page.new_possibilities.1": "I have developed some useful patterns for use with the lamp, documented on the next few pages. These patterns should only be cast by the genie within the lamp, lest I succumb to the Impersonate Genie mishap, which emits red sparks and yanks my casting item from my hand.$(br2)$(o)Yeah, but your $(l)$(o)hexcasters$()$(o) were so preoccupied with whether or not they could, they didn't stop to think if they should.$()",
	"hexical.page.get_lamp_position": "Pushes my original position when I began using the lamp.",
	"hexical.page.get_lamp_rotation": "Pushes my original rotation when I began using the lamp.",
	"hexical.page.get_lamp_velocity": "Pushes my original velocity when I began using the lamp.",
	"hexical.page.get_lamp_use_time": "Pushes how many times the lamp has casted. Divided by 20, it is the number of seconds since I began using the lamp.",
	"hexical.page.get_lamp_media": "Pushes the remaining media of the lamp in dust, in terms of dust.",
	"hexical.page.lamp_finale.0": "The instant I let go of my lamp, it casts twice: once for the usual cast and a second time as a final burst of media. I can use this pattern to recognize whether a cast is that finale, and react accordingly.",

	"hexical.page.replacement_mind.title": "Replacement Mind",
	"hexical.page.replacement_mind.0": "Hex casting burns out the mind from the energy of thought, flooding the consciousness, inundating every neuron... it's euphoric. For staffs, casting devices, and spell circles, the rate of casting is slow enough that a mind can recuperate; I will never need to replace an impetus. With the speeds lamps operates at, though, even an optimized mind can only bear the burden for so long.",
	"hexical.page.replacement_mind.1": "Luckily, the lamp somehow sustains the mind until its media battery runs out. When the genie finally perishes, the lamp must be... reloaded.$(br2)$(o)I am a great soft jelly thing. Smoothly rounded, with no mouth, with pulsing white holes filled by fog where my eyes used to be. Rubbery appendages that were once my arms; bulks rounding down into legless humps of soft slippery matter.$(br2)I have no mouth. And I must scream.$()",
	"hexical.page.replacement_mind.2": "I have developed this pattern to transform the mind of a villager into a genie. Recharging requires a new mind each time, so I should gather as much media as I can beforehand. The pattern itself costs five charged amethyst.",
	"hexical.page.replacement_mind.3": "The stress of nonstop casting requires highly trained minds, I estimate of Journeyman-grade or greater. Highly trained villagers should become better genies. I doubt the difference between a Journeyman and an Expert would survive the $(o)optimization$(), but the difference between an Expert and a Master is magnitudes greater. Perhaps great enough to make a meaningful difference in the quality of casting.",

	"hexical.page.arch_lamps.title": "Arch Lamps",
	"hexical.page.arch_lamps.0": "Because a separate mind casts my spells, a lamp should be able to cast even without me holding it. I estimate any villager short of a complete master of its field would be unable to cast so often unassisted though. These $(item)arch lamps$() are activated and deactivated rather than used and while active in my inventory, they cast every moment even without my input.",
	"hexical.page.arch_lamps.1": "The output of an arch lamp is so grand that it saturates the air around me with _media... it's incredible. Unfortunately, if two lamps are active at once within my inventory, the resonances clash and deactivate both lamps, as well as rendering every arch lamp in my inventory useless for a few seconds. I should only have one archgenie lamp active at once, although I can still simutaneously use a regular lamp.",
	"hexical.page.lamp_finale.1": "When a master lamp is turned off, it casts an additional time. I can use this pattern to recognize when whether a cast is that last burst of energy.",
	"hexical.page.get_arch_lamp_position": "Pushes the original position of the caster when the arch lamp started casting.",
	"hexical.page.get_arch_lamp_rotation": "Pushes the original rotation of the caster when the arch lamp started casting.",
	"hexical.page.get_arch_lamp_velocity": "Pushes the original velocity of the caster when the arch lamp started casting.",
	"hexical.page.get_arch_lamp_use_time": "Pushes how many times the lamp has casted. Divided by 20, it returns how many times in seconds the lamp has been in use.",
	"hexical.page.get_arch_lamp_media": "Pushes the remaining amount of media left in the lamp, in terms of dust.",
	"hexical.page.has_arch_lamp": "Pushes whether a player currently has an active arch lamp.",
	"hexical.page.terminate_arch_lamp": "Can be casted by a casting device, staff, or within the arch lamp itself. Deactivates the lamp's operation, similar to Charon's.",

	"hexical.page.arch_lamp_storage.title": "Arch Lamp Memory",
	"hexical.page.arch_lamp_storage": "An archgenie can remember an iota, persisting between casts. If I need to save an iota between casts of the lamp, I can stash it in its memory. The two patterns responsible for interacting with the memory can also be cast by a staff or casting device if an arch lamp is active.",
	"hexical.page.set_arch_lamp_storage": "Sets the lamp's iota storage. Subject to Transgress Others mishap.",
	"hexical.page.get_arch_lamp_storage": "Gets the lamp's iota storage.",

	"hexical.page.nephthys.title": "Nephthys' Gambit",
	"hexical.page.nephthys.0": "Pops a pattern list and a number from the stack and dives down n iota to cast the pattern list. Useful for surgery-like operations.",
	"hexical.page.nephthys.1": "It's extremely versatile and I can mend almost any error in my stack using Bookkeeper's Gambit, pushing iota after a dive, and transforming surfaced iota. It was named after a goddess of mourning and rivers, lending to how it buries/dives down into the stack.$(br2)$(o)... the unknowns of time travel... is akin to descending blindly into the depths of the freezing water and reappearing as an acorn.$()",

	"hexical.page.telepathy.title": "Telepathy",
	"hexical.page.telepathy": "Media is the energy of thought and consequently, it can interact with thoughts as well. Unfortunately or perhaps fortunately for me, the minds of players are too resistant to be swayed by hexes and even the minds of villagers resist tampering. There is a notable exception though: my own mind is open to my own media, allowing me to read and write thoughts.",
	"hexical.page.get_telepathy": "By focusing on a particular image, I can detect that concentration via this telepathy spell. This pattern pushes how long I have been holding down the telepathy key, or null if I am not holding it.",
	"hexical.page.send_telepathy": "Momentarily displays the iota above my hotbar above my hotbar. If cast repeatedly, each cast overwrites the previous message instantly.",
	"hexical.page.shout_telepathy": "Displays a iota across my screen. I find it can get annoying since it obstructs my vision, so I shall only use it sparingly.",
	"hexical.page.pling": "Causes me to hear a pling sound that is inaudible to other players.",
	"hexical.page.click": "Causes me to hear a click sound that is inaudible to other players.",

	"hexical.page.chorus_blink.0": "Between Blink, Greater Teleport, ender pearls, and chorus fruit, this spell serves a harmonious midpoint for safe, precise, and cheap teleportation.",
	"hexical.page.chorus_blink.1": "It consumes a chorus fruit from my inventory and teleports me up to 16 blocks using an offset vector. The cost is a single dust whether I teleport the full 16 blocks or less, and has no penalty for multiple casts in one hex. Ambit works strangely with repeated casts of this spell because each $(o)blink$() shifts my ambit to my new position.$(br2)$(o)I could be there in a heartbeat.$()",

	"hexical.page.mage_block.title": "Mage Blocks",
	"hexical.page.mage_block": "The blocks from Conjure Block last forever, are consequently a pain to clean up, and are not too versatile. Luckily, Nature offers an elegant and flexible alternative. These mage blocks come with a suite of $(o)modifiers$(). I could even stack multiple modifiers on one block.",
	"hexical.page.conjure_mage_block": "Conjures a mage block at the location. Costs three dust.$(br2)$(o)I can create a city out of nothing, or I can cover it in volcanic rock.$()",
	"hexical.page.modify_block_bouncy": "This modifier makes the block delightfully fun to bounce on! It returns more force to me than regular slime blocks and I notice even if I sneak, the block bounces me regardless.",
	"hexical.page.modify_block_energized": "This modifier makes the block emit a Redstone signal, with the number reacting to the power level.",
	"hexical.page.modify_block_ephemeral": "This modifier takes in a number as well as the usual position and shatters the block after the number in twentieths of a second has passed. Subsequent casts can lengthen or shorten the duration.",
	"hexical.page.modify_block_invisible": "This modifier prevents the block from emitting the telltale particles that accompany my casting, even when being stood on.",
	"hexical.page.modify_block_replaceable": "This modifier is useful for construction! With this modifier applied, I find I can easily place another block in the place of the mage block.",
	"hexical.page.modify_block_volatile": "This modifier makes the block break other conjured blocks it's touching. Notably, if it breaks another volatile block, that block breaks and so on until every volatile block shatters.",

	"hexical.page.specks.title": "Specks",
	"hexical.page.specks.0": "I can conjure an image of an iota into the world, called a speck. Nature allows me to customize them quite extensively, altering their size, thickness of stroke, and more. They also take on my pigment color. Once they are in the world, I can move, rotate, and otherwise alter them for free, regardless of range.",
	"hexical.page.conjure_speck": "Conjures a speck with the iota, position, and rotation. Costs one-hundredth of a dust.$(br2)$(o)Because you saw things from every angle, you understood them for what they really were.$()",
	"hexical.page.move_speck": "Moves a speck entity to the position.",
	"hexical.page.rotate_speck": "Rotates a speck entity to face the vector.",
	"hexical.page.z_rotation_speck": "Accepts a number between 0 and 1, representing a fraction of a full rotation, and rotates the speck's image by that amount.",
	"hexical.page.iota_speck": "Changes the speck's iota.",
	"hexical.page.lifetime_speck": "Changes the speck to disappear after that many twentieths of a second.",
	"hexical.page.size_speck": "Changes the size of the speck, must be less than 10.",
	"hexical.page.thickness_speck": "Changes the thickness of the speck, must be less than 5. Applies only when iota is a pattern.",
	"hexical.page.kill_speck": "Forces a speck entity to disappear.",
	"hexical.page.zone_speck": "Returns specks similarly to other $(l:patterns/entities)zone distillation$() patterns.",

	"hexical.page.conjure_staff.0": "Conjured staves are not unlike $(l:items/hexcasting)$(item)cyphers$(). They have a media battery for casting and when they run out, unable to consume my health or my inventory's stash for _media. They are not rechargable or reprogrammable, and using $(l:patterns/spells/hexcasting#hexcasting:erase)$(action)Erase Item$() on it simply destroys it. However, its true power is $(o)input interception$().",
	"hexical.page.conjure_staff.1": "Conjures a staff at the location with the amount of media, rank, and hex respectively.$(br2)$(o)This is my $(l)staff$()$(o). There are many like it, but this one is mine.$()",
	"hexical.page.conjure_staff.2": "When I use my primary or secondary use keys while holding a conjured staff, it intercepts my click. After a number of clicks corresponding to the rank I assigned at conjuration, it will cast the hex I gave it, starting the stack with false and true, corresponding to the left and right clicks respectively. If I pause for too long between clicks, it simply cancels the current \"cast\".",
	"hexical.page.conjure_staff.3": "The spell is not too expensive, requiring only an amethyst shard, an amethyst dust for every rank, and the media for the battery. The result is a speedy and versatile casting device, with infinitely more possibilities and no cooldown compared to other casting devices."
}
